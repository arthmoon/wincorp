version: "3.9"
services:
    api:
        build:
            context: api/docker
            dockerfile: dev/nginx/Dockerfile
        volumes:
            - ./api:/app
        ports:
            - "8080:80"

    api-php-fpm:
        container_name: wincorp-api-php-fpm
        build:
            context: api/docker
            dockerfile: dev/php-fpm/Dockerfile
        environment:
            APP_ENV: dev
            APP_DEBUG: 1
            DB_HOST: api-postgres
            DB_USER: app
            DB_PASSWORD_FILE: /run/secrets/api_db_password
            DB_NAME: app
            API_TOKEN_FILE: /run/secrets/api_token
        volumes:
            - ./api:/app
        secrets:
            - api_db_password
            - api_token

    api-php-cli:
        build:
            context: api/docker
            dockerfile: dev/php-cli/Dockerfile
        environment:
            APP_ENV: dev
            APP_DEBUG: 1
            DB_HOST: api-postgres
            DB_USER: app
            DB_PASSWORD_FILE: /run/secrets/api_db_password
            DB_NAME: app
        volumes:
            - ./api:/app
        secrets:
            - api_db_password

    api-postgres:
        image: postgres:13.3-alpine
        environment:
            POSTGRES_USER: app
            POSTGRES_PASSWORD_FILE: /run/secrets/api_db_password
            POSTGRES_DB: app
        secrets:
            - api_db_password
        volumes:
            - api-postgres:/var/lib/postgresql/data
        ports:
            - "54321:5432"

    api-postgres-backup:
        build:
            context: ./api/docker/common
            dockerfile: postgres-backup/Dockerfile
        environment:
            BACKUP_NAME: api-postgres
            POSTGRES_HOST: api-postgres
            POSTGRES_DB: app
            POSTGRES_USERNAME: app
            POSTGRES_PASSWORD_FILE: /run/secrets/api_db_password
            AWS_ACCESS_KEY_ID: storage_app
            AWS_SECRET_ACCESS_KEY_FILE: /run/secrets/backup_aws_secret_access_key
            AWS_DEFAULT_REGION: region
            S3_ENDPOINT: http://backup-storage:9000
            S3_BUCKET: backup
        secrets:
            - api_db_password
            - backup_aws_secret_access_key
        command: sh -c 'wait-for-it api-postgres:5432 -t 20 && backup'

    backup-storage:
        image: minio/minio
        environment:
            MINIO_ROOT_USER: storage_app
            MINIO_ROOT_PASSWORD_FILE: /run/secrets/backup_aws_secret_access_key
        secrets:
            - backup_aws_secret_access_key
        volumes:
            - ./data:/data
        entrypoint: sh -c 'mkdir -p /data/backup && docker-entrypoint.sh minio server /data --console-address ":80"'

secrets:
    api_db_password:
        file: ./docker/dev/secrets/api_db_password
    backup_aws_secret_access_key:
        file: ./docker/dev/secrets/backup_aws_secret_access_key
    api_token:
        file: ./docker/dev/secrets/api_token

volumes:
    api-postgres:

